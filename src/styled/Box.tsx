import * as React from "react"
import { FunctionComponent } from "react"
import styled from "styled-components"
import {
    breakpoints,
    css,
    compose,
    borders,
    display,
    flexbox,
    palette,
    positions,
    shadows,
    sizing,
    spacing,
    typography,
    StyleFunction,
} from "@material-ui/system"

type StylerProps = UnpackStyleFunction<typeof styler>
type UnpackStyleFunction<T> = T extends StyleFunction<infer U> ? U : never

const styler = breakpoints(
    css(
        compose(
            borders,
            display,
            flexbox,
            palette,
            positions,
            shadows,
            sizing,
            spacing,
            typography
        )
    )
)

const createBox = (as: keyof JSX.IntrinsicElements) =>
    styled(as)<StylerProps>(styler)

const BoxMap = {
    a: createBox("a"),
    abbr: createBox("abbr"),
    address: createBox("address"),
    area: createBox("area"),
    article: createBox("article"),
    aside: createBox("aside"),
    audio: createBox("audio"),
    b: createBox("b"),
    base: createBox("base"),
    bdi: createBox("bdi"),
    bdo: createBox("bdo"),
    big: createBox("big"),
    blockquote: createBox("blockquote"),
    body: createBox("body"),
    br: createBox("br"),
    button: createBox("button"),
    canvas: createBox("canvas"),
    caption: createBox("caption"),
    cite: createBox("cite"),
    code: createBox("code"),
    col: createBox("col"),
    colgroup: createBox("colgroup"),
    data: createBox("data"),
    datalist: createBox("datalist"),
    dd: createBox("dd"),
    del: createBox("del"),
    details: createBox("details"),
    dfn: createBox("dfn"),
    dialog: createBox("dialog"),
    div: createBox("div"),
    dl: createBox("dl"),
    dt: createBox("dt"),
    em: createBox("em"),
    embed: createBox("embed"),
    fieldset: createBox("fieldset"),
    figcaption: createBox("figcaption"),
    figure: createBox("figure"),
    footer: createBox("footer"),
    form: createBox("form"),
    h1: createBox("h1"),
    h2: createBox("h2"),
    h3: createBox("h3"),
    h4: createBox("h4"),
    h5: createBox("h5"),
    h6: createBox("h6"),
    head: createBox("head"),
    header: createBox("header"),
    hgroup: createBox("hgroup"),
    hr: createBox("hr"),
    html: createBox("html"),
    i: createBox("i"),
    iframe: createBox("iframe"),
    img: createBox("img"),
    input: createBox("input"),
    ins: createBox("ins"),
    kbd: createBox("kbd"),
    keygen: createBox("keygen"),
    label: createBox("label"),
    legend: createBox("legend"),
    li: createBox("li"),
    link: createBox("link"),
    main: createBox("main"),
    map: createBox("map"),
    mark: createBox("mark"),
    menu: createBox("menu"),
    menuitem: createBox("menuitem"),
    meta: createBox("meta"),
    meter: createBox("meter"),
    nav: createBox("nav"),
    noindex: createBox("noindex"),
    noscript: createBox("noscript"),
    object: createBox("object"),
    ol: createBox("ol"),
    optgroup: createBox("optgroup"),
    option: createBox("option"),
    output: createBox("output"),
    p: createBox("p"),
    param: createBox("param"),
    picture: createBox("picture"),
    pre: createBox("pre"),
    progress: createBox("progress"),
    q: createBox("q"),
    rp: createBox("rp"),
    rt: createBox("rt"),
    ruby: createBox("ruby"),
    s: createBox("s"),
    samp: createBox("samp"),
    script: createBox("script"),
    section: createBox("section"),
    select: createBox("select"),
    small: createBox("small"),
    source: createBox("source"),
    span: createBox("span"),
    strong: createBox("strong"),
    style: createBox("style"),
    sub: createBox("sub"),
    summary: createBox("summary"),
    sup: createBox("sup"),
    table: createBox("table"),
    template: createBox("template"),
    tbody: createBox("tbody"),
    td: createBox("td"),
    textarea: createBox("textarea"),
    tfoot: createBox("tfoot"),
    th: createBox("th"),
    thead: createBox("thead"),
    time: createBox("time"),
    title: createBox("title"),
    tr: createBox("tr"),
    track: createBox("track"),
    u: createBox("u"),
    ul: createBox("ul"),
    var: createBox("var"),
    video: createBox("video"),
    wbr: createBox("wbr"),
    webview: createBox("webview"),

    svg: createBox("svg"),
    animate: createBox("animate"),
    animateMotion: createBox("animateMotion"),
    animateTransform: createBox("animateTransform"),
    circle: createBox("circle"),
    clipPath: createBox("clipPath"),
    defs: createBox("defs"),
    desc: createBox("desc"),
    ellipse: createBox("ellipse"),
    feBlend: createBox("feBlend"),
    feColorMatrix: createBox("feColorMatrix"),
    feComponentTransfer: createBox("feComponentTransfer"),
    feComposite: createBox("feComposite"),
    feConvolveMatrix: createBox("feConvolveMatrix"),
    feDiffuseLighting: createBox("feDiffuseLighting"),
    feDisplacementMap: createBox("feDisplacementMap"),
    feDistantLight: createBox("feDistantLight"),
    feDropShadow: createBox("feDropShadow"),
    feFlood: createBox("feFlood"),
    feFuncA: createBox("feFuncA"),
    feFuncB: createBox("feFuncB"),
    feFuncG: createBox("feFuncG"),
    feFuncR: createBox("feFuncR"),
    feGaussianBlur: createBox("feGaussianBlur"),
    feImage: createBox("feImage"),
    feMerge: createBox("feMerge"),
    feMergeNode: createBox("feMergeNode"),
    feMorphology: createBox("feMorphology"),
    feOffset: createBox("feOffset"),
    fePointLight: createBox("fePointLight"),
    feSpecularLighting: createBox("feSpecularLighting"),
    feSpotLight: createBox("feSpotLight"),
    feTile: createBox("feTile"),
    feTurbulence: createBox("feTurbulence"),
    filter: createBox("filter"),
    foreignObject: createBox("foreignObject"),
    g: createBox("g"),
    image: createBox("image"),
    line: createBox("line"),
    linearGradient: createBox("linearGradient"),
    marker: createBox("marker"),
    mask: createBox("mask"),
    metadata: createBox("metadata"),
    mpath: createBox("mpath"),
    path: createBox("path"),
    pattern: createBox("pattern"),
    polygon: createBox("polygon"),
    polyline: createBox("polyline"),
    radialGradient: createBox("radialGradient"),
    rect: createBox("rect"),
    stop: createBox("stop"),
    switch: createBox("switch"),
    symbol: createBox("symbol"),
    text: createBox("text"),
    textPath: createBox("textPath"),
    tspan: createBox("tspan"),
    use: createBox("use"),
    view: createBox("view"),
}

interface IProps {
    as?: keyof JSX.IntrinsicElements
}

const Box: FunctionComponent<IProps & StylerProps> = ({
    as = "div",
    children,
    ...rest
}) => {
    const Component = BoxMap[as]
    return <Component {...rest}>{children}</Component>
}

export default Box
